1  Command: cd C:\Users ==> ls
   Java: 
   		//Process p = Runtime.getRuntime().exec("ls", null, new File("C:/Users"));
   		Process p = new ProcessBuilder("ls").directory(new File("C:/Users")).start();
		BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));
		String line;
		while ((line = in.readLine()) != null) {
		    System.out.println(line);
		}
2  Get Java version: java -version
   Java:
		ProcessBuilder pb = new ProcessBuilder("java", "-version");
		pb.redirectErrorStream(true);
		Process p = pb.start();
		BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));
		String line;
		while ((line = in.readLine()) != null) {
		    System.out.println(line);
		}   		
3  Get make help: make --help
   Java: 
		ProcessBuilder pb = new ProcessBuilder("make", "--help");
		pb.redirectErrorStream(true);
		Process p = pb.start();
		BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));
		String line;
		while ((line = in.readLine()) != null) {
		    System.out.println(line);
		}      		
4  maven version: mvn -version
   Java:
		ProcessBuilder pb = new ProcessBuilder("mvn.cmd", "-version");
		pb.redirectErrorStream(true);
		Process p = pb.start();
5  maven clean: mvn clean
   Java:
		ProcessBuilder pb = new ProcessBuilder("mvn.cmd", "clean").directory(new File("/path/to/dirPom"));
		pb.redirectErrorStream(true);
		Process p = pb.start();
6  maven install: mvn install
   Java:
		ProcessBuilder pb = new ProcessBuilder("mvn.cmd", "install").directory(new File("/path/to/dirPom"));
		pb.redirectErrorStream(true);
		Process p = pb.start();		
		
7  Run make file with option: make -f /path/to/dirFile/[file] [option]
   Java:
		ProcessBuilder pb = new ProcessBuilder("make", "-f", "[file]", [option]).directory(new File("/path/to/dirFile"));
		pb.redirectErrorStream(true);
		Process p = pb.start();						   		